// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdatePopBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnUpdate;

  @NonNull
  public final EditText edtGiamonan;

  @NonNull
  public final EditText edtLinkanh;

  @NonNull
  public final EditText edtMotamonan;

  @NonNull
  public final EditText edtTenmonan;

  private UpdatePopBinding(@NonNull LinearLayout rootView, @NonNull AppCompatButton btnUpdate,
      @NonNull EditText edtGiamonan, @NonNull EditText edtLinkanh, @NonNull EditText edtMotamonan,
      @NonNull EditText edtTenmonan) {
    this.rootView = rootView;
    this.btnUpdate = btnUpdate;
    this.edtGiamonan = edtGiamonan;
    this.edtLinkanh = edtLinkanh;
    this.edtMotamonan = edtMotamonan;
    this.edtTenmonan = edtTenmonan;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdatePopBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdatePopBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_pop, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdatePopBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_update;
      AppCompatButton btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.edt_giamonan;
      EditText edtGiamonan = ViewBindings.findChildViewById(rootView, id);
      if (edtGiamonan == null) {
        break missingId;
      }

      id = R.id.edt_linkanh;
      EditText edtLinkanh = ViewBindings.findChildViewById(rootView, id);
      if (edtLinkanh == null) {
        break missingId;
      }

      id = R.id.edt_motamonan;
      EditText edtMotamonan = ViewBindings.findChildViewById(rootView, id);
      if (edtMotamonan == null) {
        break missingId;
      }

      id = R.id.edt_tenmonan;
      EditText edtTenmonan = ViewBindings.findChildViewById(rootView, id);
      if (edtTenmonan == null) {
        break missingId;
      }

      return new UpdatePopBinding((LinearLayout) rootView, btnUpdate, edtGiamonan, edtLinkanh,
          edtMotamonan, edtTenmonan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
