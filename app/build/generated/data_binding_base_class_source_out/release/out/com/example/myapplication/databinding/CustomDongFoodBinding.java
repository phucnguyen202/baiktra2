// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDongFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgDl;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final ImageView imgRemove;

  @NonNull
  public final TextView txtGiaDl;

  @NonNull
  public final TextView txtMotaDl;

  @NonNull
  public final TextView txtTenfoodDl;

  private CustomDongFoodBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgDl,
      @NonNull ImageView imgEdit, @NonNull ImageView imgRemove, @NonNull TextView txtGiaDl,
      @NonNull TextView txtMotaDl, @NonNull TextView txtTenfoodDl) {
    this.rootView = rootView;
    this.imgDl = imgDl;
    this.imgEdit = imgEdit;
    this.imgRemove = imgRemove;
    this.txtGiaDl = txtGiaDl;
    this.txtMotaDl = txtMotaDl;
    this.txtTenfoodDl = txtTenfoodDl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDongFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDongFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_dong_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDongFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_dl;
      ImageView imgDl = ViewBindings.findChildViewById(rootView, id);
      if (imgDl == null) {
        break missingId;
      }

      id = R.id.img_edit;
      ImageView imgEdit = ViewBindings.findChildViewById(rootView, id);
      if (imgEdit == null) {
        break missingId;
      }

      id = R.id.img_remove;
      ImageView imgRemove = ViewBindings.findChildViewById(rootView, id);
      if (imgRemove == null) {
        break missingId;
      }

      id = R.id.txt_gia_dl;
      TextView txtGiaDl = ViewBindings.findChildViewById(rootView, id);
      if (txtGiaDl == null) {
        break missingId;
      }

      id = R.id.txt_mota_dl;
      TextView txtMotaDl = ViewBindings.findChildViewById(rootView, id);
      if (txtMotaDl == null) {
        break missingId;
      }

      id = R.id.txt_tenfood_dl;
      TextView txtTenfoodDl = ViewBindings.findChildViewById(rootView, id);
      if (txtTenfoodDl == null) {
        break missingId;
      }

      return new CustomDongFoodBinding((LinearLayout) rootView, imgDl, imgEdit, imgRemove, txtGiaDl,
          txtMotaDl, txtTenfoodDl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
